name: Build

on:
  push:
    branches: 
    - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Install nbgv
      run: dotnet tool install nbgv --tool-path ./tools --version 3.3.37
    - name: Run nbgv
      run: echo "NUGET_PACKAGE_VERSION=$(./tools/nbgv get-version -v NuGetPackageVersion)" >> $GITHUB_ENV
      
    - name: Pack 
      run: dotnet pack --output ./out --configuration Release --verbosity normal

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NUGET_PACKAGE_VERSION }}
        release_name: Release ${{ env.NUGET_PACKAGE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload nupkg Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FILE_NAME: test-actions.${{ env.NUGET_PACKAGE_VERSION }}.nupkg
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/${{ env.FILE_NAME }}
        asset_name: ${{ env.FILE_NAME }}
        asset_content_type: application/zip

    # - name: Upload snupkg Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     FILE_NAME: "DevHawk.Buffers.$NUGET_PACKAGE_VERSION.snupkg"
    #   with:
    #     upload_url: ${{ github.event.release.upload_url }}
    #     asset_path: "./out/$FILE_NAME"
    #     asset_name: "$FILE_NAME"
    #     asset_content_type: application/zip
